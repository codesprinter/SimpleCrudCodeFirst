@model SC.ViewModel.StudentViewModel


@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.StudentID);
    @Html.AntiForgeryToken()
    
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">Add Student</h4>
        </div>        
            
        <div class="modal-body">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentCode, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.StudentCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StudentCode)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Dob, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Dob, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                        @Html.ValidationMessageFor(model => model.Dob)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentList, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.DepartmentID, new SelectList(Model.DepartmentList, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DepartmentList)
                    </div>
                </div>
            </div>
            <div class = "modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn" data-dismiss="modal" aria-hidden="true">Cancel</button>
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div> 
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
